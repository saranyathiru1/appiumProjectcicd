<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="6" passed="5">
  <reporter-output>
    <line>
      <![CDATA[This is sample screenshot]]>
    </line>
    <line>
      <![CDATA[<a href='C:\Users\Admin\Downloads\AppiumProject\AppiumProject\Screenshots\Android_\Any Device Name\13-Jan-2022__11_17_19PM\ApiDemoTest\dragandDropTest.png'> <img src='C:\Users\Admin\Downloads\AppiumProject\AppiumProject\Screenshots\Android_\Any Device Name\13-Jan-2022__11_17_19PM\ApiDemoTest\dragandDropTest.png' height='400' width='400'/> </a>]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="57030" started-at="2022-01-13T17:46:26Z" finished-at="2022-01-13T17:47:23Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="23007" started-at="2022-01-13T17:46:26Z" finished-at="2022-01-13T17:46:49Z">
      <class name="com.qa.webtests.AmazonWebTest">
        <test-method status="PASS" signature="beforeTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.webtests.AmazonWebTest@568ff82]" name="beforeTest" is-config="true" duration-ms="19430" started-at="2022-01-13T17:46:26Z" finished-at="2022-01-13T17:46:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Any Device Name]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.qa.webtests.AmazonWebTest@568ff82]" name="beforeMethod" is-config="true" duration-ms="397" started-at="2022-01-13T17:46:45Z" finished-at="2022-01-13T17:46:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="verifyAmazonLogoTest()[pri:1, instance:com.qa.webtests.AmazonWebTest@568ff82]" name="verifyAmazonLogoTest" duration-ms="50" started-at="2022-01-13T17:46:46Z" finished-at="2022-01-13T17:46:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAmazonLogoTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.qa.webtests.AmazonWebTest@568ff82]" name="beforeMethod" is-config="true" duration-ms="4" started-at="2022-01-13T17:46:46Z" finished-at="2022-01-13T17:46:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="searchItemsandVerifyTitleTest()[pri:2, instance:com.qa.webtests.AmazonWebTest@568ff82]" name="searchItemsandVerifyTitleTest" duration-ms="3026" started-at="2022-01-13T17:46:46Z" finished-at="2022-01-13T17:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchItemsandVerifyTitleTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.qa.webtests.AmazonWebTest@568ff82]" name="beforeMethod" is-config="true" duration-ms="4" started-at="2022-01-13T17:46:49Z" finished-at="2022-01-13T17:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="scrollToBottomTest()[pri:3, instance:com.qa.webtests.AmazonWebTest@568ff82]" name="scrollToBottomTest" duration-ms="30" started-at="2022-01-13T17:46:49Z" finished-at="2022-01-13T17:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scrollToBottomTest -->
        <test-method status="FAIL" signature="tearDown()[pri:0, instance:com.qa.webtests.AmazonWebTest@568ff82]" name="tearDown" is-config="true" duration-ms="2" started-at="2022-01-13T17:46:49Z" finished-at="2022-01-13T17:46:49Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.qa.WebBaseTest.tearDown(WebBaseTest.java:200)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.afterRun(TestRunner.java:725)
at org.testng.TestRunner.run(TestRunner.java:509)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.webtests.AmazonWebTest -->
    </test> <!-- Test -->
    <test name="Test1" duration-ms="33985" started-at="2022-01-13T17:46:49Z" finished-at="2022-01-13T17:47:23Z">
      <class name="com.qa.tests.ApiDemoTest">
        <test-method status="PASS" signature="beforesecondTest(java.lang.String, java.lang.String)[pri:0, instance:com.qa.tests.ApiDemoTest@482bce4f]" name="beforesecondTest" is-config="true" duration-ms="9989" started-at="2022-01-13T17:46:49Z" finished-at="2022-01-13T17:46:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Any Device Name]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforesecondTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.qa.tests.ApiDemoTest@482bce4f]" name="beforeMethod" is-config="true" duration-ms="873" started-at="2022-01-13T17:46:59Z" finished-at="2022-01-13T17:47:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="scrollTest()[pri:1, instance:com.qa.tests.ApiDemoTest@482bce4f]" name="scrollTest" duration-ms="10226" started-at="2022-01-13T17:47:00Z" finished-at="2022-01-13T17:47:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scrollTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.tests.ApiDemoTest@482bce4f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-01-13T17:47:10Z" finished-at="2022-01-13T17:47:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.qa.tests.ApiDemoTest@482bce4f]" name="beforeMethod" is-config="true" duration-ms="464" started-at="2022-01-13T17:47:10Z" finished-at="2022-01-13T17:47:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="dragandDropTest()[pri:2, instance:com.qa.tests.ApiDemoTest@482bce4f]" name="dragandDropTest" duration-ms="7661" started-at="2022-01-13T17:47:10Z" finished-at="2022-01-13T17:47:18Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Dropped] but found [Dropped!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Dropped] but found [Dropped!]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.qa.tests.ApiDemoTest.dragandDropTest(ApiDemoTest.java:87)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:284)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:119)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[This is sample screenshot]]>
            </line>
            <line>
              <![CDATA[<a href='C:\Users\Admin\Downloads\AppiumProject\AppiumProject\Screenshots\Android_\Any Device Name\13-Jan-2022__11_17_19PM\ApiDemoTest\dragandDropTest.png'> <img src='C:\Users\Admin\Downloads\AppiumProject\AppiumProject\Screenshots\Android_\Any Device Name\13-Jan-2022__11_17_19PM\ApiDemoTest\dragandDropTest.png' height='400' width='400'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- dragandDropTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.tests.ApiDemoTest@482bce4f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-01-13T17:47:19Z" finished-at="2022-01-13T17:47:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.qa.tests.ApiDemoTest@482bce4f]" name="beforeMethod" is-config="true" duration-ms="1034" started-at="2022-01-13T17:47:19Z" finished-at="2022-01-13T17:47:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="touchgesturesTest()[pri:3, instance:com.qa.tests.ApiDemoTest@482bce4f]" name="touchgesturesTest" duration-ms="2387" started-at="2022-01-13T17:47:20Z" finished-at="2022-01-13T17:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- touchgesturesTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.tests.ApiDemoTest@482bce4f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-01-13T17:47:22Z" finished-at="2022-01-13T17:47:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.qa.tests.ApiDemoTest@482bce4f]" name="tearDown" is-config="true" duration-ms="560" started-at="2022-01-13T17:47:22Z" finished-at="2022-01-13T17:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.tests.ApiDemoTest -->
      <class name="com.qa.webtests.AmazonWebTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.qa.webtests.AmazonWebTest@568ff82]" name="beforeSuite" is-config="true" duration-ms="7387" started-at="2022-01-13T17:46:18Z" finished-at="2022-01-13T17:46:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.qa.webtests.AmazonWebTest@568ff82]" name="afterSuite" is-config="true" duration-ms="66" started-at="2022-01-13T17:47:23Z" finished-at="2022-01-13T17:47:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.qa.webtests.AmazonWebTest -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
